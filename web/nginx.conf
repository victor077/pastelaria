# nginx.conf
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    # Configurações de log, cache e outros parâmetros podem vir aqui
    server {
        listen 80;
        # Configurações do front-end
        location / {
            root /usr/share/nginx/html;
            try_files $uri /index.html;
        }

        # Proxy para o back-end (certifique-se de que a URL corresponde à do seu back-end)
        location /menu {
            proxy_pass http://order-service:7000/menu;  # Endereço do back-end dentro da rede Docker
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /orders {
            if ($request_method = 'POST') {
                proxy_pass http://order-service:7000/orders;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }

        location /orders {
            if ($request_method = 'GET' && $uri !~* "/orders/") {
                proxy_pass http://order-service:7000/orders;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }

        location /orders/ {
            if ($request_method = 'GET' && $uri ~* "/orders/[^/]+$") {
                proxy_pass http://order-service:7000/orders;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }

            location /orders {
            if ($request_method = 'PATCH') {
                proxy_pass http://order-service:7000/orders;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }

            location /orders/ {
            if ($request_method = 'DELETE' && $uri ~* "/orders/[^/]+$") {
                proxy_pass http://order-service:7000/orders;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }
}